name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'tourimate-client/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tourimate-client/**'

env:
  NODE_VERSION: '18'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'tourimate-client/package-lock.json'

    - name: Install dependencies
      working-directory: ./tourimate-client
      run: npm ci

    - name: Run type checking
      working-directory: ./tourimate-client
      run: npm run typecheck

    - name: Run tests
      working-directory: ./tourimate-client
      run: npm run test

    - name: Build client
      working-directory: ./tourimate-client
      run: npm run build:client

    - name: Build server
      working-directory: ./tourimate-client
      run: npm run build:server

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: tourimate-client/dist/

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'tourimate-client/package-lock.json'

    - name: Install dependencies
      working-directory: ./tourimate-client
      run: npm ci

    - name: Build for production
      working-directory: ./tourimate-client
      run: |
        npm run build:client
        npm run build:server

    - name: Create deployment package
      run: |
        cd tourimate-client/dist
        zip -r ../../frontend-production.zip .
        cd ../..
        echo "Package created successfully"
        ls -lh frontend-production.zip

    - name: Upload deployment package to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "frontend-production.zip"
        target: "C:/Users/deploy/"
        strip_components: 0

    - name: Execute deployment on VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        command_timeout: 30m
        script: |
          echo "=== RUNNING FRONTEND DEPLOYMENT SCRIPT ==="
          cd C:\Users\deploy
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -la
          echo "Running PowerShell script..."
          powershell.exe -ExecutionPolicy Bypass -Command "& { $ErrorActionPreference = 'Continue'; Write-Host '=== DEBUG START ==='; Write-Host 'PowerShell Version:' $PSVersionTable.PSVersion; Write-Host 'Current user:' $(whoami); Set-Location C:\Users\deploy; Write-Host 'Current directory:' $(Get-Location); Write-Host 'Files in deploy directory:'; Get-ChildItem | Format-Table Name, Length, LastWriteTime -AutoSize; Write-Host 'Checking ZIP file...'; if (Test-Path 'frontend-production.zip') { $zipFile = Get-Item 'frontend-production.zip'; Write-Host 'ZIP exists - Size:' ([math]::Round($zipFile.Length / 1MB, 2)) 'MB'; } else { Write-Host 'ERROR: ZIP file not found!'; exit 1; }; Write-Host '=== DEPLOYMENT START ==='; try { Import-Module WebAdministration; Stop-Website -Name 'TouriMate Frontend Production' -ErrorAction SilentlyContinue; Write-Host 'Website stopped'; } catch { Write-Host 'Warning:' $_ }; $deployPath = 'C:\inetpub\wwwroot\tourimate-frontend-production'; if (Test-Path $deployPath) { $backup = 'C:\inetpub\wwwroot\tourimate-frontend-production-backup-' + (Get-Date -Format 'yyyyMMdd-HHmmss'); Move-Item $deployPath $backup -Force; Write-Host 'Backed up to:' $backup; }; New-Item -ItemType Directory -Path $deployPath -Force | Out-Null; Write-Host 'Extracting files...'; Expand-Archive -Path 'C:\Users\deploy\frontend-production.zip' -DestinationPath $deployPath -Force; $files = Get-ChildItem $deployPath -Recurse -File; Write-Host 'Extracted' $files.Count 'files'; Get-ChildItem $deployPath | Format-Table Name, Length -AutoSize; icacls $deployPath /grant 'IIS_IUSRS:(OI)(CI)F' /T; Start-Website -Name 'TouriMate Frontend Production'; $site = Get-Website -Name 'TouriMate Frontend Production'; Write-Host 'Website state:' $site.State; Write-Host '=== DEPLOYMENT COMPLETE ==='; }"
          echo "Script execution completed"

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: frontend-production-package
        path: frontend-production.zip
