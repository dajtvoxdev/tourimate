name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'tourimate/**'
      - 'entities/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tourimate/**'
      - 'entities/**'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: './tourimate'
  SOLUTION_PATH: './tourimate.sln'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/**'

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build for production
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

    - name: Publish application
      run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ./publish --no-build

    - name: Create deployment package
      run: |
        cd publish
        tar -czf ../tourimate-production.tar.gz .

    - name: Upload deployment package and script to VPS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "tourimate-production.tar.gz,deployment/deploy-backend.ps1"
        target: "C:/Users/deploy/"
        debug: true
        timeout: 60s

    - name: Check deployment files
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          echo "=== CHECKING DEPLOYMENT FILES ==="
          cd C:\Users\deploy
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -la
          echo "Checking tar.gz file..."
          if [ -f "tourimate-production.tar.gz" ]; then
            echo "✅ Package found: tourimate-production.tar.gz"
            ls -lh tourimate-production.tar.gz
          else
            echo "❌ ERROR: tourimate-production.tar.gz not found!"
            exit 1
          fi

    - name: Stop IIS and backup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          echo "=== STOPPING IIS AND BACKUP ==="
          cd C:\Users\deploy
          echo "Stopping IIS website..."
          powershell -Command "Import-Module WebAdministration; Stop-Website -Name 'TouriMate API Production' -ErrorAction SilentlyContinue"
          echo "Backing up existing deployment..."
          if [ -d "C:\inetpub\wwwroot\tourimate-production" ]; then
            powershell -Command "Move-Item 'C:\inetpub\wwwroot\tourimate-production' 'C:\inetpub\wwwroot\tourimate-production-backup-$(Get-Date -Format ''yyyyMMdd-HHmmss'')' -Force"
          fi
          echo "Creating new directory..."
          powershell -Command "New-Item -ItemType Directory -Path 'C:\inetpub\wwwroot\tourimate-production' -Force"

    - name: Extract files and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          echo "=== EXTRACTING FILES AND DEPLOYING ==="
          cd C:\Users\deploy
          echo "Extracting files..."
          tar -xzf tourimate-production.tar.gz -C "C:\inetpub\wwwroot\tourimate-production" -v
          echo "Setting permissions..."
          powershell -Command "icacls 'C:\inetpub\wwwroot\tourimate-production' /grant 'IIS_IUSRS:(OI)(CI)F' /T"
          echo "Starting IIS website..."
          powershell -Command "Start-Website -Name 'TouriMate API Production'"
          echo "=== DEPLOYMENT COMPLETE ==="

    - name: Run database migrations
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          echo "=== DATABASE MIGRATION START ==="
          cd C:\inetpub\wwwroot\tourimate-production
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -la
          echo "Running database migration..."
          dotnet ef database update --connection "${{ secrets.CONNECTION_STRING_PRODUCTION }}"
          echo "=== DATABASE MIGRATION COMPLETE ==="

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: tourimate-production-package
        path: tourimate-production.tar.gz