name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'tourimate/**'
      - 'entities/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tourimate/**'
      - 'entities/**'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: './tourimate'
  SOLUTION_PATH: './tourimate.sln'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/**'

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build for production
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

    - name: Publish application
      run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ./publish --no-build

    - name: Create deployment package
      run: |
        cd publish
        tar -czf ../tourimate-production.tar.gz .

    - name: Upload deployment package to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "tourimate-production.tar.gz"
        target: "C:/Users/deploy/"
        debug: true
        timeout: 60s

    - name: Deploy to Windows VPS (Production)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        command_timeout: 30m
        script: |
          powershell -Command "
            Write-Host '=== DEBUG START ==='
            Write-Host 'Current directory:'
            Get-Location
            Write-Host 'Files in current directory:'
            Get-ChildItem
            
            Write-Host 'Changing to deploy directory...'
            Set-Location C:\Users\deploy
            Write-Host 'Current location:'
            Get-Location
            
            Write-Host 'Files in deploy directory:'
            Get-ChildItem
            
            Write-Host 'Checking tar.gz file...'
            if (Test-Path 'tourimate-production.tar.gz') {
              Write-Host 'tar.gz file exists, size:'
              (Get-Item 'tourimate-production.tar.gz').Length
            } else {
              Write-Host 'ERROR: tar.gz file does not exist!'
              exit 1
            }
            
            Write-Host '=== DEPLOYMENT START ==='
            Write-Host 'Stopping IIS website...'
            Import-Module WebAdministration
            Stop-Website -Name 'TouriMate API Production' -ErrorAction SilentlyContinue
            
            Write-Host 'Backing up existing deployment...'
            if (Test-Path 'C:\inetpub\wwwroot\tourimate-production') {
              `$backupName = 'tourimate-production-backup-' + (Get-Date -Format 'yyyyMMdd-HHmmss')
              Move-Item 'C:\inetpub\wwwroot\tourimate-production' \"C:\inetpub\wwwroot\`$backupName\" -Force
              Write-Host \"Backed up to `$backupName\"
            }
            
            Write-Host 'Creating new directory...'
            New-Item -ItemType Directory -Path 'C:\inetpub\wwwroot\tourimate-production' -Force | Out-Null
            
            Write-Host 'Extracting files...'
            tar.exe -xzf 'C:\Users\deploy\tourimate-production.tar.gz' -C 'C:\inetpub\wwwroot\tourimate-production'
            
            Write-Host 'Verifying extraction...'
            `$extractedFiles = Get-ChildItem 'C:\inetpub\wwwroot\tourimate-production' -Recurse
            Write-Host \"Total files extracted: `$(`$extractedFiles.Count)\"
            Write-Host 'First 10 files:'
            `$extractedFiles | Select-Object -First 10 | ForEach-Object { Write-Host `$_.FullName }
            
            Write-Host 'Setting permissions...'
            icacls 'C:\inetpub\wwwroot\tourimate-production' /grant 'IIS_IUSRS:(OI)(CI)F' /T
            
            Write-Host 'Starting IIS website...'
            Start-Website -Name 'TouriMate API Production'
            
            Write-Host '=== DEPLOYMENT COMPLETE ==='
          "

    - name: Run database migrations
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          powershell -Command "
            Write-Host '=== DATABASE MIGRATION START ==='
            Set-Location C:\inetpub\wwwroot\tourimate-production
            Write-Host 'Current directory:'
            Get-Location
            
            Write-Host 'Files in directory:'
            Get-ChildItem | Select-Object Name, Length
            
            Write-Host 'Running database migration...'
            dotnet ef database update --connection '${{ secrets.CONNECTION_STRING_PRODUCTION }}'
            
            Write-Host '=== DATABASE MIGRATION COMPLETE ==='
          "

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: tourimate-production-package
        path: tourimate-production.tar.gz